{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.6.0.0",
        "fileVersion": "4.6.0-3.23259.8 (c3cc1d0c)",
        "semanticVersion": "4.6.0",
        "language": "en-IT"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Username' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/DTOs/AuthenticateUserRequest.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/DTOs/AuthenticateUserRequest.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Password' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/DTOs/AuthenticateUserRequest.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/DTOs/AuthenticateUserRequest.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 17,
                  "endLine": 63,
                  "endColumn": 177
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'value' in 'Claim.Claim(string type, string value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 38,
                  "endLine": 85,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'value' in 'Claim.Claim(string type, string value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 35,
                  "endLine": 86,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "Nullable value type may be null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 134,
                  "endLine": 85,
                  "endColumn": 161
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "Nullable value type may be null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 163,
                  "endLine": 85,
                  "endColumn": 188
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "Nullable value type may be null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 126,
                  "endLine": 93,
                  "endColumn": 153
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8629",
          "level": "warning",
          "message": "Nullable value type may be null.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 155,
                  "endLine": 93,
                  "endColumn": 180
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Program.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 22,
                  "endLine": 71,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_config' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 32,
                  "endLine": 25,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ComputeSHA256Hash' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/MappingProfile.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 24,
                  "endLine": 29,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4792",
          "level": "warning",
          "message": "Make sure that this logger's configuration is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Program.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogTrace(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 38,
                  "endLine": 51,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 34,
                  "endLine": 46,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 40,
                  "endLine": 64,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogTrace(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/TokenController.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 38,
                  "endLine": 69,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 34,
                  "endLine": 65,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 34,
                  "endLine": 70,
                  "endColumn": 115
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 40,
                  "endLine": 96,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogTrace(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///Users/abdulhadi.elhussain/Projects/AbdulhadiNagarroAssignment/AbdulhadiNagarroAssignment/Controllers/StatementController.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 38,
                  "endLine": 103,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS4014": {
          "id": "CS4014",
          "shortDescription": "Because this call is not awaited, execution of the current method continues before the call is completed",
          "fullDescription": "The current method calls an async method that returns a Task or a Task<TResult> and doesn't apply the await operator to the result. The call to the async method starts an asynchronous task. However, because no await operator is applied, the program continues without waiting for the task to complete. In most cases, that behavior isn't what you expect. Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from the method that contains the call.\u000d\u000a\u000d\u000aAn equally important issue is what happens to exceptions that are raised in the called async method. An exception that's raised in a method that returns a Task or Task<TResult> is stored in the returned task. If you don't await the task or explicitly check for exceptions, the exception is lost. If you await the task, its exception is rethrown.\u000d\u000a\u000d\u000aAs a best practice, you should always await the call.\u000d\u000a\u000d\u000aYou should consider suppressing the warning only if you're sure that you don't want to wait for the asynchronous call to complete and that the called method won't raise any exceptions. In that case, you can suppress the warning by assigning the task result of the call to a variable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS4014)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8629": {
          "id": "CS8629",
          "shortDescription": "Nullable value type may be null.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8629)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4792": {
          "id": "S4792",
          "shortDescription": "Configuring loggers is security-sensitive",
          "fullDescription": "Configuring loggers is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4792",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}